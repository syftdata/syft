import{a as y,b as m,l as d,r as S,d as I}from"./chunk-30aba9a8.js";import{M as i}from"./chunk-c834524c.js";const p="/assets/index.tsx-loader.4794abc2.js";async function v(e,t,n){await chrome.scripting.executeScript({target:{tabId:e,frameIds:[t]},files:[n]})}async function g(e,t){v(e,t,p)}async function T(e,t){await chrome.scripting.executeScript({target:{tabId:e,frameIds:[t]},func:()=>{typeof(window==null?void 0:window.__SYFT_CLEAN_UP)=="function"&&window.__SYFT_CLEAN_UP()}})}async function x(e){console.debug("[Syft][Background] starting recording on ",e);const t=await chrome.tabs.get(e);y(e,0,t.url||""),await T(e,0),await chrome.tabs.reload(e,{bypassCache:!0}),await g(e,0)}async function M(e){console.debug("[Syft][Background] stoping recording on ",e),await m()}chrome.runtime.onMessageExternal.addListener((e,t,n)=>{e.type===i.LoggedIn&&(e.jwt?(console.log("Token ::: ",e.jwt),n({success:!0,message:"Token has been received"})):n({success:!1,message:"Token not found"}))});async function l(e){const{tabId:t,url:n,transitionType:a,frameId:o}=e,{recordingTabId:c,recordingFrameId:b,recordingState:w}=await d(["recordingState","recordingTabId","recordingFrameId"]);o!==b||w!=="active"||c!==t||await S(n,a)}chrome.tabs.onRemoved.addListener(async e=>{const{recordingTabId:t}=await d(["recordingTabId"]);e==t&&m()});chrome.webNavigation.onHistoryStateUpdated.addListener(l);chrome.webNavigation.onReferenceFragmentUpdated.addListener(l);chrome.webNavigation.onCommitted.addListener(l);chrome.webNavigation.onCompleted.addListener(async e=>{const{tabId:t,frameId:n}=e,{recordingTabId:a,recordingFrameId:o,recordingState:c}=await d(["recordingTabId","recordingFrameId","recordingState"]);n!==o||t!=a||c!="active"||await g(t,o)});const u="syft-menu-hover-id",f="syft-menu-await-text-id";chrome.contextMenus.removeAll();chrome.contextMenus.create({title:"Record hover over element",contexts:["all"],id:u,enabled:!1});chrome.contextMenus.create({title:"Assert/wait for selected text",contexts:["selection"],id:f,enabled:!1});chrome.contextMenus.onClicked.addListener(async(e,t)=>{if(typeof t>"u")return;const{recordingTabId:n}=await d(["recordingTabId"]);if(t.id!=n)return;let a="onHoverCtxMenu";e.menuItemId===u?a="onHoverCtxMenu":e.menuItemId===f&&(a="onAwaitTextCtxMenu"),chrome.tabs.sendMessage(n,{type:a,selectionText:e.selectionText})});function s({enabled:e}){chrome.contextMenus.update(u,{enabled:e}),chrome.contextMenus.update(f,{enabled:e})}d(["recordingState"]).then(({recordingState:e})=>{s(e==="active"?{enabled:!0}:{enabled:!1})});chrome.storage.onChanged.addListener(e=>{var t,n,a,o;((t=e==null?void 0:e.recordingState)==null?void 0:t.oldValue)!==((n=e==null?void 0:e.recordingState)==null?void 0:n.newValue)&&(((a=e==null?void 0:e.recordingState)==null?void 0:a.newValue)=="active"&&s({enabled:!0}),((o=e==null?void 0:e.recordingState)==null?void 0:o.newValue)=="finished"&&s({enabled:!1}))});const r={};async function k(e,t){switch(console.debug("[Syft][Background] Received a message from Devtools",e),e.type){case i.InitDevTools:r[e.tabId]=t;break;case i.StartRecord:await x(e.tabId);break;case i.StopRecord:await M(e.tabId);break;case i.ReplaceStep:const n=await I(e.index,e.action);await t.postMessage({type:i.RecordedStep,data:n});break}return!0}chrome.runtime.onConnect.addListener(async function(e){if(console.debug("[Syft][Background] Received a connection",e),e.name!=="syft-devtools")return;const t=(n,a)=>{if(n.type==null){console.warn('[Syft][Background] Received a message without a "type" field',n);return}return k(n,a).catch(o=>{console.warn("[Syft][Background] Error handling message! ",o)}),!0};e.onMessage.addListener(t),e.onDisconnect.addListener(n=>{n.onMessage.removeListener(t);for(var a=Object.keys(r),o=0,c=a.length;o<c;o++)if(r[a[o]]==n){delete r[a[o]];break}})});chrome.runtime.onMessage.addListener((e,t,n)=>{var a;if(t.tab){const o=(a=t.tab.id)==null?void 0:a.toString();o!=null&&o in r?(r[o].postMessage(e),n(!0)):console.warn("Tab not found in connection list.",e,o,Object.keys(r))}else if(e.tabId!=null){const o=e.tabId.toString();o in r?(r[o].postMessage(e),n(!0)):console.warn("Tab not found in connection list.",e,o,Object.keys(r))}else console.warn("[Syft][Background] Received a message from Devtools?",e)});
