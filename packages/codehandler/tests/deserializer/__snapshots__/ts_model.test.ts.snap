// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generateASTForProject with event annotations 1`] = `
"[
  {
    "name": "UserIdentity",
    "eventType": 3,
    "exported": true,
    "documentation": "User Identity is tracked via this event.",
    "fields": [
      {
        "name": "userId",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "UUID",
          "zodType": "z.string().uuid()"
        },
        "documentation": ""
      },
      {
        "name": "email",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "Email",
          "zodType": "z.string().email()"
        },
        "documentation": ""
      },
      {
        "name": "country",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "CountryCode",
          "zodType": "z.string().length(2)"
        },
        "documentation": ""
      },
      {
        "name": "direction",
        "isOptional": false,
        "type": {
          "name": "number",
          "zodType": "z.enum([0, 1, 2, 3])"
        },
        "documentation": ""
      },
      {
        "name": "isSpammer",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.enum([\\"Yes\\", \\"No\\"])"
        },
        "documentation": ""
      },
      {
        "name": "isVerified",
        "isOptional": false,
        "type": {
          "name": "boolean",
          "zodType": "z.boolean()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tuserId: z.string().uuid(),\\n\\temail: z.string().email(),\\n\\tcountry: z.string().length(2),\\n\\tdirection: z.enum([0, 1, 2, 3]),\\n\\tisSpammer: z.enum([\\"Yes\\", \\"No\\"]),\\n\\tisVerified: z.boolean()\\n  })"
  }
]"
`;

exports[`generateASTForProject with multiple schemas 1`] = `
"[
  {
    "name": "UserIdentity",
    "eventType": 3,
    "exported": true,
    "documentation": "User Identity is tracked via this event.",
    "fields": [
      {
        "name": "userId",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "UUID",
          "zodType": "z.string().uuid()"
        },
        "documentation": ""
      },
      {
        "name": "email",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "Email",
          "zodType": "z.string().email()"
        },
        "documentation": ""
      },
      {
        "name": "country",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "CountryCode",
          "zodType": "z.string().length(2)"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tuserId: z.string().uuid(),\\n\\temail: z.string().email(),\\n\\tcountry: z.string().length(2)\\n  })"
  },
  {
    "name": "BasePageEvent",
    "eventType": 1,
    "exported": false,
    "documentation": "@type {SyftEventType.PAGE}",
    "fields": [
      {
        "name": "page",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.string()"
        },
        "documentation": ""
      },
      {
        "name": "time",
        "isOptional": false,
        "type": {
          "name": "Date",
          "zodType": "z.date()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tpage: z.string(),\\n\\ttime: z.date()\\n  })"
  },
  {
    "name": "IndexPageEvent",
    "eventType": 1,
    "exported": true,
    "documentation": "Gets logged when user opens the index page.",
    "fields": [
      {
        "name": "page",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.string()"
        },
        "documentation": "",
        "defaultValue": "'index'"
      },
      {
        "name": "loggedIn",
        "isOptional": false,
        "type": {
          "name": "boolean",
          "zodType": "z.boolean()"
        },
        "documentation": "",
        "defaultValue": "false"
      },
      {
        "name": "time",
        "isOptional": false,
        "type": {
          "name": "Date",
          "zodType": "z.date()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tpage: z.string(),\\n\\tloggedIn: z.boolean(),\\n\\ttime: z.date()\\n  })"
  },
  {
    "name": "SourceType",
    "eventType": 0,
    "exported": false,
    "documentation": "",
    "fields": [
      {
        "name": "source_name",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.string()"
        },
        "documentation": ""
      },
      {
        "name": "source_id",
        "isOptional": true,
        "type": {
          "name": "number",
          "zodType": "z.number().optional()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tsource_name: z.string(),\\n\\tsource_id: z.number().optional()\\n  })"
  },
  {
    "name": "SourceAction",
    "eventType": 0,
    "exported": false,
    "documentation": "SourceAction gets logged when a source is created/updated/deleted.",
    "fields": [
      {
        "name": "isOriginal",
        "isOptional": false,
        "type": {
          "name": "boolean",
          "zodType": "z.boolean()"
        },
        "documentation": "is the source original or a proxy."
      },
      {
        "name": "id",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "UUID",
          "zodType": "z.string().uuid()"
        },
        "documentation": "id of the source."
      },
      {
        "name": "type",
        "isOptional": false,
        "type": {
          "name": "SourceType",
          "typeFields": [
            {
              "name": "source_name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "source_id",
              "isOptional": true,
              "type": {
                "name": "number",
                "zodType": "z.number().optional()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tsource_name: z.string(),\\n\\tsource_id: z.number().optional()\\n  })"
        },
        "documentation": "Source type."
      },
      {
        "name": "eventType",
        "isOptional": true,
        "type": {
          "name": "EventType",
          "typeFields": [
            {
              "name": "name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "id",
              "isOptional": true,
              "type": {
                "name": "number",
                "zodType": "z.number().optional()"
              }
            },
            {
              "name": "test_field",
              "isOptional": true,
              "type": {
                "name": "string",
                "zodType": "z.string().optional()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tname: z.string(),\\n\\tid: z.number().optional(),\\n\\ttest_field: z.string().optional()\\n  }).optional()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tisOriginal: z.boolean(),\\n\\tid: z.string().uuid(),\\n\\ttype: z.object({\\n    \\tsource_name: z.string(),\\n\\tsource_id: z.number().optional()\\n  }),\\n\\teventType: z.object({\\n    \\tname: z.string(),\\n\\tid: z.number().optional(),\\n\\ttest_field: z.string().optional()\\n  }).optional()\\n  })"
  },
  {
    "name": "SourceUpdated",
    "eventType": 0,
    "exported": true,
    "documentation": "SourceAction gets logged when a source is created/updated/deleted.",
    "fields": [
      {
        "name": "isOriginal",
        "isOptional": false,
        "type": {
          "name": "boolean",
          "zodType": "z.boolean()"
        },
        "documentation": "is the source original or a proxy."
      },
      {
        "name": "id",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "UUID",
          "zodType": "z.string().uuid()"
        },
        "documentation": "id of the source."
      },
      {
        "name": "type",
        "isOptional": false,
        "type": {
          "name": "SourceType",
          "typeFields": [
            {
              "name": "source_name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "source_id",
              "isOptional": true,
              "type": {
                "name": "number",
                "zodType": "z.number().optional()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tsource_name: z.string(),\\n\\tsource_id: z.number().optional()\\n  })"
        },
        "documentation": "Source type."
      },
      {
        "name": "eventType",
        "isOptional": true,
        "type": {
          "name": "EventType",
          "typeFields": [
            {
              "name": "name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "id",
              "isOptional": true,
              "type": {
                "name": "number",
                "zodType": "z.number().optional()"
              }
            },
            {
              "name": "test_field",
              "isOptional": true,
              "type": {
                "name": "string",
                "zodType": "z.string().optional()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tname: z.string(),\\n\\tid: z.number().optional(),\\n\\ttest_field: z.string().optional()\\n  }).optional()"
        },
        "documentation": ""
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tisOriginal: z.boolean(),\\n\\tid: z.string().uuid(),\\n\\ttype: z.object({\\n    \\tsource_name: z.string(),\\n\\tsource_id: z.number().optional()\\n  }),\\n\\teventType: z.object({\\n    \\tname: z.string(),\\n\\tid: z.number().optional(),\\n\\ttest_field: z.string().optional()\\n  }).optional()\\n  })"
  },
  {
    "name": "NotifChannelAction",
    "eventType": 0,
    "exported": false,
    "documentation": "",
    "fields": [
      {
        "name": "name",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.string()"
        },
        "documentation": "Name of the channel, this is a unique global name.\\n@min 5"
      },
      {
        "name": "type",
        "isOptional": false,
        "type": {
          "name": "ChannelType",
          "typeFields": [
            {
              "name": "channel_name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "channel_type",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tchannel_name: z.string(),\\n\\tchannel_type: z.string()\\n  })"
        },
        "documentation": ""
      },
      {
        "name": "webhook",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "Url",
          "zodType": "z.string().url()"
        },
        "documentation": ""
      },
      {
        "name": "count",
        "isOptional": false,
        "type": {
          "name": "number",
          "zodType": "z.number()"
        },
        "documentation": "Number of notifications fired so far.\\n@min 0"
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tname: z.string(),\\n\\ttype: z.object({\\n    \\tchannel_name: z.string(),\\n\\tchannel_type: z.string()\\n  }),\\n\\twebhook: z.string().url(),\\n\\tcount: z.number()\\n  })"
  },
  {
    "name": "NotifChannelUpdated",
    "eventType": 0,
    "exported": true,
    "documentation": "",
    "fields": [
      {
        "name": "name",
        "isOptional": false,
        "type": {
          "name": "string",
          "zodType": "z.string()"
        },
        "documentation": "Name of the channel, this is a unique global name.\\n@min 5"
      },
      {
        "name": "type",
        "isOptional": false,
        "type": {
          "name": "ChannelType",
          "typeFields": [
            {
              "name": "channel_name",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            },
            {
              "name": "channel_type",
              "isOptional": false,
              "type": {
                "name": "string",
                "zodType": "z.string()"
              }
            }
          ],
          "zodType": "z.object({\\n    \\tchannel_name: z.string(),\\n\\tchannel_type: z.string()\\n  })"
        },
        "documentation": ""
      },
      {
        "name": "webhook",
        "isOptional": false,
        "type": {
          "name": "string",
          "syfttype": "Url",
          "zodType": "z.string().url()"
        },
        "documentation": ""
      },
      {
        "name": "count",
        "isOptional": false,
        "type": {
          "name": "number",
          "zodType": "z.number()"
        },
        "documentation": "Number of notifications fired so far.\\n@min 0"
      }
    ],
    "traits": [],
    "zodType": "z.object({\\n    \\tname: z.string(),\\n\\ttype: z.object({\\n    \\tchannel_name: z.string(),\\n\\tchannel_type: z.string()\\n  }),\\n\\twebhook: z.string().url(),\\n\\tcount: z.number()\\n  })"
  }
]"
`;
